apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gvm.fullname" . }}-gvmd
  labels:
  {{- $_ := set . "applicationNameSuffix" "gvmd" }}
  {{- include "gvm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "gvm.name" . }}-gvmd
      app.kubernetes.io/instance: {{ include "gvm.instance" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "gvm.name" . }}-gvmd
        app.kubernetes.io/instance: {{ include "gvm.instance" . }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ tpl .Values.image.gvmd.registry . }}/{{ tpl .Values.image.gvmd.repository . }}:{{ tpl .Values.image.gvmd.tag . }}"
          imagePullPolicy: {{ .Values.image.gvmd.pullPolicy }}
          env:
            - name: GVMD_POSTGRESQL_HOST
              value: {{ .Release.Name }}-gvmd-db
            - name: GVMD_POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "gvmd.secretName" . }}
                  key: postgresql-password
            - name: GVMD_POSTGRESQL_URI
              value: "postgresql://gvmduser:$(GVMD_POSTGRESQL_PASSWORD)@$(GVMD_POSTGRESQL_HOST):5432/gvmd?application_name=gvmd"
          ports:
            - name: gvmd
              containerPort: 9390
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: gvmd
          readinessProbe:
            tcpSocket:
              port: gvmd
          volumeMounts:
            - name: run-dir
              mountPath: /var/run
            - name: data-volume
              subPath: {{ include "gvm.dataSubPathPrefix" . }}plugins
              mountPath: /var/lib/openvas/plugins
            - name: data-volume
              subPath: {{ include "gvm.dataSubPathPrefix" . }}cert-data
              mountPath: /var/lib/gvm/cert-data
            - name: data-volume
              subPath: {{ include "gvm.dataSubPathPrefix" . }}scap-data
              mountPath: /var/lib/gvm/scap-data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-openvassd-connector
          image: "{{ tpl .Values.image.socat.registry . }}/{{ tpl .Values.image.socat.repository . }}:{{ tpl .Values.image.socat.tag . }}"
          imagePullPolicy: {{ .Values.image.socat.pullPolicy }}
          args: ["-d", "-d", "UNIX-LISTEN:/var/run/openvassd.sock,fork", "TCP4-CONNECT:{{ .Release.Name }}-openvassd:9391"]
          volumeMounts:
            - name: run-dir
              mountPath: /var/run
      volumes:
        - name: run-dir
          emptyDir: {}
        - name: data-volume
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ tpl .Values.persistence.existingClaim . | default (include "gvm.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
